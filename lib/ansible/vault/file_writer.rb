module Ansible
  class Vault
    # A class for writting the encrypted data into an Ansible formatted file
    #
    # @!attribute [r] path
    #   @return [String] The path to write the file to, truncated before writing
    # @!attribute [rw] ciphertext
    #   @return [String] The encrypted contents of the file.
    # @!attribute [rw] hmac
    #   @return [String] The HMAC value for the ciphertext, calculated by an
    #     instance of {Encryptor}
    # @!attribute [rw] salt
    #   @return [String] The salt value for the ciphertext, generated by an
    #     instance of {Encryptor}
    class FileWriter
      attr_reader :path
      attr_accessor :ciphertext, :hmac, :salt

      # The standard header for Ansible's current vault format
      HEADER = "$ANSIBLE_VAULT;1.1;AES256\n".freeze

      # Construct a new FileWriter
      #
      # @param [String] path The path to write the file out to.
      def initialize(path)
        @path = path
      end

      # Write out the encrypted contents of the file in the correct format.
      #
      # @return [File] The closed file handle used to write the data out.
      def write
        File.open(path, 'w') { |file|
          file.write(HEADER)
          file.write(encoded_body)
        }
      end

      private

      def encoded_body
        encoded_ciphertext = BinASCII.hexlify(@ciphertext)
        encoded_salt = BinASCII.hexlify(@salt)

        raw_body = [encoded_salt, @hmac, encoded_ciphertext].join("\n")
        BinASCII.hexlify(raw_body).scan(/.{,80}/).join("\n")
      end
    end
  end
end

